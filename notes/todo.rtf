{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;\f2\fswiss\fcharset0 Helvetica-Bold;
\f3\fswiss\fcharset0 Helvetica-Oblique;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red2\green2\blue2;}
{\*\expandedcolortbl;;\csgray\c0;\csgenericrgb\c784\c784\c784;}
\deftab720
\pard\pardeftab720\sl300\partightenfactor0

\f0\fs36 \cf2 \CocoaLigature0 clear && printf '\\e[3J' && cargo build && RUST_BACKTRACE=1 ./target/debug/crippled_god\
\pard\pardeftab963\pardirnatural\partightenfactor0
\
\pard\pardeftab720\sl300\partightenfactor0
clear && printf '\\e[3J' && cargo test\
\pard\pardeftab720\sl380\partightenfactor0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0
cargo doc --open\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\
\pard\pardeftab720\sl420\partightenfactor0

\f1\fs48 \cf3 \CocoaLigature1 http://www.roguebasin.com/index.php?title=Category:Articles\
https://www.reddit.com/r/roguelikedev\
http://malazan.wikia.com/wiki/Malazan_Wiki\
https://www.gridsagegames.com/blog/2020/04/developing-multitile-creatures-roguelikes/\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf3 \
Open in External App extension\
\
had a rustfmt.tml file:\
max_width = 150\
\
\pard\pardeftab720\sl420\partightenfactor0
\cf3 http://www.roguebasin.com/index.php?title=How_to_Write_a_Roguelike_in_15_Steps\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\b \cf3 Step 3 - It's a boy!\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b0 \cf3 \'95\'a0Get basic IO working:\
	- render a basic map\
	- use arrow keys to make an @ move around\
	- hard-code some impassible terrain (something simple like # is impassible)\
	- water should print a message, "You splash through the water"\
\'95 Get logging working\
	- error and warning should echo to messages
\f2\b \
\
Step 4 - The map\

\f1\b0 \'95\'a0Switch to some sort of event sourcing design\
\'95 Add events\
	- new game event\
	- reset level event\
	- set terrain event\
	- etc\
\'95\'a0Add state objects\
	- update these as events are posted\
	- Level: hash map of Location to Square\
	- UI\
\'95 Add action objects\
	- this is where the logic is, typically a dual dispatch sort of thing\
	- for the player this either posts event(s) or writes a non-game message\
	  eg opens a door or tells the user "You bump into the wall"\
	- player actions will be either the implicit action (arrow keying) or a use action\
	  (inventory item against another object)\
	- later would have other actions like cast a spell\
	- for NPCs this will post event(s), in some cases this could be zero events\
\'95 Support levels larger than the screen
\f2\b \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b0 \cf3 enum ObjectTag\
	MeleeWeapon\
	RangedWeapon\
	MinDamage(i32)\
	MaxDamage(i32)\
	Range(i32)          
\f3\i defaults to 1
\f1\i0 \
	Brand(element)\
	\

\f3\i 	
\f1\i0 Binding(String) 
\f3\i used to tie two objects together, eg a key and a door
\f1\i0 	\
	Door(material)    
\f3\i wood, stone, steel
\f1\i0 \
	Fountain(type)   
\f3\i water or blood\
	
\f1\i0 Key                    
\f3\i keys should have a binding\
	Chest(contents) has a binding if a key is required
\f1\i0 \
	\
	Character\
	Player\
	
\f3\i 	\

\f1\i0 Object\
	name\
	description\
	tags: Vec<ObjectTag>\
\
Square\
	terrain    
\f3\i ground, wall, rubble, grass, shallow water, deep water, oil, vitr (walls should have a material, maybe use liquid with a type)
\f1\i0 \
	objects: Vec<Object>\
\

\f3\i terrain is semi-permanent\
stuff like munitions will transition terrain, eg to rubble\
\
player moving does an implicit action against objects there\
	attempt to open door\
	melee enemy\
	talk to friendly\
	drink from fountain\
player can also use an inventory item against an object\
	uses range of inventory item\
	normally at least current and adjacent squares\
	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2\i0\b \cf3 Step 5 - Saving/Loading\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b0 \cf3 \'95\'a0Add support for persistence\
	- should state objects save a checksum to verify that loads work?\
\'95\'a0Support a key bindings file?
\f2\b \
\
Step 6 - It's alive! Alive!\

\f1\b0 \'95\'a0Add aggressive and fleeing NPCs\
	- these move either toward or away from the player\
	- will need a simple time system (use ints)\
\'95 Look into Dijkstra Maps\
	- http://www.roguebasin.com/index.php/The_Incredible_Power_of_Dijkstra_Maps\
	- http://www.roguebasin.com/index.php/Dijkstra_Maps_Visualized
\f2\b \
\
Step 7 - Interaction\

\f1\b0 \'95\'a0Add character stats, should be object tags\
\'95 Support combat\
	- for now this can be unarmed combat\
	- should be tags for this
\f2\b \
\
Step 8 - Data files\

\f1\b0 \'95\'a0Make it easier to create new objects\
	- this would probably involve something like a macro rather than a config file
\f2\b \
\
Step 9 - Items\

\f1\b0 \'95\'a0Randomly place items on the level\
\'95\'a0Support picking them up\
\'95 Support using items\
\'95 Support wielding a weapon\
	- implicit action should use a weapon if it's equipped\
\'95 If an NPC is killed it should drop whatever was in its inventory\
\'95\'a0May want to support stacking\
	- arrows? food? javelins? munitions?\
\'95\'a0May want a config file to configure which are auto-picked up
\f2\b \
\
Step 10 - Magic\

\f1\b0 \'95\'a0Add some basic spells \
\'95\'a0Maybe just a few from one warren\
\'95\'a0NPCs should also be able to cast spells (or use a particular ability that amounts to a spell)
\f2\b \
\
Step 11 - Simple game\

\f1\b0 \'95\'a0Put Rhulad in some sort of vault (with a large door)\
	- inside is arena with spectators\
\'95 Add the crippled god's sword\
	- god may intercede to actually kill Rhulad\
	- can't un-equip it\
	- if die with it on then speed and craziness increase\
	- crazy 1: "You feel like you're being watched", few others like that\
	- crazy 2: chance of seeing things that aren't there
\f2\b \

\f1\b0 	- crazy 3: often see things that aren't there, including seeing things that are there as something else\
	- crazy 4: make random movements, miss messages (getting hit, walking into walls)\
\'95 Add a weapon or two that'll allow you to kill Rhulad\
\'95 Add a vitr lake\
	- description should say that it is eating away at the ground\
	- use sword on lake and win the game
\f2\b \
\
Step 12 - Levels\

\f1\b0 \'95\'a0Vitr lake should slowly expand
\f2\b \
\
Step 13 - Experience\

\f1\b0 \'95\'a0xxx
\f2\b \
\
Step 14 - Citizens\

\f1\b0 \'95\'a0xxx
\f2\b \
\
Step 15 - Free at last
\f1\b0 \
\'95\'a0xxx
\f2\b \
\
}